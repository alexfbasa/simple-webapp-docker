apiVersion: v1
kind: Template
metadata:
  name: ${NGINX}
  labels:
    app: ${NGINX}
    template: ${NGINX}
  annotations:
    iconClass: icon-nginx
    template.openshift.io/bindable: "true"
    openshift.io/provider-display-name: "Kuehne + Nagel"

parameters:
  - name: NGINX
    value: nginx
    description: The name of auth-proxy deployment
  - name: REPLICAS
    description: Number of replicas on the cluster
    value: "1"
  - name: PROJECT_NAME
    description: The project name, by default we defined Development
    value: cp-401345
  - name: CONTAINER_REGISTRY
    value: docker-registry.default.svc:5000
  - name: IMAGE_TAG
    value: latest
  - name: REQUESTED_MEMORY
    value: 50Mi
  - name: REQUESTED_CPU
    value: 2m
  - name: LIMITED_MEMORY
    value: 256Mi
  - name: LIMITED_CPU
    value: "1"

objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NGINX}
      name: ${NGINX}
      annotations:
    spec:
      replicas: "${{REPLICAS}}"
      selector:
        app: ${NGINX}
        deploymentconfig: ${NGINX}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NGINX}
            deploymentconfig: ${NGINX}
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
              preference:
                matchExpressions:
                  - key: "type"
                    operator: In
                    values: ["generic"]
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: "kubernetes.io/hostname"
                    labelSelector:
                    matchExpressions:
                      - key: "mService"
                        operator: In
                        values: ["${NGINX}"]
          containers:
            - env:
              image: "${CONTAINER_REGISTRY}/${PROJECT_NAME}/${NGINX}:${IMAGE_TAG}"
              imagePullPolicy: Always
              name: ${NGINX}
              ports:
                - containerPort: 8081
                  protocol: TCP
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8083
                  scheme: HTTP
                initialDelaySeconds: 300
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 30
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8083
                  scheme: HTTP
                initialDelaySeconds: 20
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 300
              resources:
                limits:
                  cpu: 2
                  memory: 2Gi
                requests:
                  cpu: 1m
                  memory: 1Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 90
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NGINX}
            from:
              kind: ImageStreamTag
              name: "${NGINX}:${IMAGE_TAG}"
              namespace: ${PROJECT_NAME}
            lastTriggeredImage: "${CONTAINER_REGISTRY}/${PROJECT_NAME}/${NGINX}:${IMAGE_TAG}"
          type: ImageChange
        - type: ConfigChange

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NGINX}
      name: ${NGINX}
      annotations:
    spec:
      ports:
        - name: 8081-tcp
          port: 8081
          protocol: TCP
          targetPort: 8081
      selector:
        app: ${NGINX}
        deploymentconfig: ${NGINX}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NGINX}
      name: ${NGINX}
    spec:
      host: ${NGINX}-${PROJECT_NAME}.apps.cluster1.emea.cp.alex.com
      port:
        targetPort: 8081-tcp
      tls:
        termination: edge
      to:
        kind: Service
        name: ${NGINX}
        weight: 100
      wildcardPolicy: None